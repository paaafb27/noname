<!DOCTYPE html>
<html xmlns:th="http://www.thymeleaf.org">
<head th:replace="~{layout/header :: header}"></head>
<body>

<!-- 네비게이션 -->
<div th:replace="~{layout/header :: navbar}"></div>

<div class="container mt-4">
    <div class="row">
        <!-- 세일 정보 -->
        <div class="col-lg-8">
            <div class="card mb-4">
                <div class="card-body">
                    <!-- 출처 배지 -->
                    <span class="badge bg-secondary mb-2" th:text="${sale.sourceSite}">뽐뿌</span>
                    
                    <!-- 제목 -->
                    <h2 class="card-title mb-3" th:text="${sale.title}">세일 제목</h2>
                    
                    <!-- 이미지 -->
                    <img th:src="${sale.imageUrl}" class="img-fluid rounded mb-3" alt="상품 이미지">
                    
                    <!-- 가격 -->
                    <div class="d-flex justify-content-between align-items-center mb-3">
                        <h3 class="text-danger mb-0">
                            <strong th:text="${#numbers.formatInteger(sale.price, 0, 'COMMA') + '원'}">99,000원</strong>
                        </h3>
                        <a th:href="${sale.productUrl}" class="btn btn-primary" target="_blank">
                            <i class="bi bi-cart"></i> 구매하러 가기
                        </a>
                    </div>
                    
                    <!-- 판매처 -->
                    <div class="mb-3">
                        <i class="bi bi-shop"></i> 
                        <strong>판매처:</strong> 
                        <span th:text="${sale.storeName}">쿠팡</span>
                    </div>
                    
                    <!-- 메타 정보 -->
                    <div class="d-flex gap-3 text-muted mb-3">
                        <span><i class="bi bi-eye"></i> <span th:text="${sale.viewCount}">0</span></span>
                        <span><i class="bi bi-chat"></i> <span th:text="${sale.commentCount}">0</span></span>
                        <span><i class="bi bi-clock"></i> <span th:text="${#temporals.format(sale.createdAt, 'yyyy-MM-dd HH:mm')}">2025-01-01</span></span>
                    </div>
                    
                    <!-- 좋아요 버튼 -->
                    <button class="btn btn-outline-danger w-100" id="likeBtn" onclick="toggleLike()">
                        <i class="bi bi-heart"></i>
                        <span id="likeText">좋아요</span>
                        <span class="badge bg-danger ms-2" id="likeCount" th:text="${sale.likeCount}">0</span>
                    </button>
                </div>
            </div>
            
            <!-- 댓글 섹션 -->
            <div class="card">
                <div class="card-header">
                    <h5 class="mb-0">
                        <i class="bi bi-chat-dots"></i> 
                        댓글 <span class="badge bg-secondary" id="commentCount" th:text="${sale.commentCount}">0</span>
                    </h5>
                </div>
                <div class="card-body">
                    <!-- 댓글 작성 (로그인 필요) -->
                    <div th:if="${!#strings.isEmpty(userName)}" class="mb-4">
                        <textarea class="form-control mb-2" id="commentContent" rows="3" 
                                  placeholder="댓글을 입력하세요..."></textarea>
                        <button class="btn btn-primary" onclick="writeComment()">
                            <i class="bi bi-send"></i> 댓글 작성
                        </button>
                    </div>
                    
                    <!-- 비로그인 시 안내 -->
                    <div th:if="${#strings.isEmpty(userName)}" class="alert alert-info mb-4">
                        <i class="bi bi-info-circle"></i> 
                        댓글을 작성하려면 <a th:href="@{/login}" class="alert-link">로그인</a>이 필요합니다.
                    </div>
                    
                    <!-- 댓글 목록 -->
                    <div id="commentList">
                        <!-- JavaScript로 동적 로드 -->
                    </div>
                </div>
            </div>
        </div>
        
        <!-- 사이드바 -->
        <div class="col-lg-4">
            <!-- 최신 세일 -->
            <div class="card">
                <div class="card-header">
                    <h5 class="mb-0"><i class="bi bi-fire"></i> 최신 세일</h5>
                </div>
                <div class="list-group list-group-flush" id="recentSales">
                    <!-- JavaScript로 동적 로드 -->
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Bootstrap JS -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
<script th:src="@{/js/main.js}"></script>

<script th:inline="javascript">
const saleId = [[${sale.id}]];

// 페이지 로드 시 댓글 로드
document.addEventListener('DOMContentLoaded', function() {
    loadComments();
    loadRecentSales();
    checkLikeStatus();
});

/**
 * 댓글 목록 로드
 */
async function loadComments() {
    try {
        const response = await fetch(`/api/sales/${saleId}/comments`);
        const comments = await response.json();
        renderComments(comments);
    } catch (error) {
        console.error('댓글 로드 실패:', error);
    }
}

/**
 * 댓글 렌더링
 */
function renderComments(comments) {
    const commentList = document.getElementById('commentList');
    
    if (comments.length === 0) {
        commentList.innerHTML = '<p class="text-muted text-center py-3">첫 댓글을 작성해보세요!</p>';
        return;
    }
    
    commentList.innerHTML = comments.map(comment => `
        <div class="comment mb-3 p-3 bg-light rounded">
            <div class="d-flex justify-content-between align-items-start mb-2">
                <div class="d-flex align-items-center">
                    <img src="${comment.user.profileImage}" class="rounded-circle me-2" 
                         width="32" height="32" alt="profile">
                    <strong>${escapeHtml(comment.user.nickname)}</strong>
                </div>
                <small class="text-muted">${formatDate(comment.createdAt)}</small>
            </div>
            <p class="mb-0">${escapeHtml(comment.content)}</p>
            
            ${comment.replies && comment.replies.length > 0 ? `
                <div class="ms-4 mt-2">
                    ${comment.replies.map(reply => `
                        <div class="reply p-2 bg-white rounded mb-2">
                            <div class="d-flex justify-content-between align-items-start mb-1">
                                <div class="d-flex align-items-center">
                                    <img src="${reply.user.profileImage}" class="rounded-circle me-2" 
                                         width="24" height="24" alt="profile">
                                    <small><strong>${escapeHtml(reply.user.nickname)}</strong></small>
                                </div>
                                <small class="text-muted">${formatDate(reply.createdAt)}</small>
                            </div>
                            <p class="mb-0 ms-4"><small>${escapeHtml(reply.content)}</small></p>
                        </div>
                    `).join('')}
                </div>
            ` : ''}
        </div>
    `).join('');
}

/**
 * 댓글 작성
 */
async function writeComment() {
    const content = document.getElementById('commentContent').value.trim();
    
    if (!content) {
        alert('댓글 내용을 입력하세요.');
        return;
    }
    
    try {
        const response = await fetchWithAuth('/api/comments', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({
                saleId: saleId,
                content: content
            })
        });
        
        if (response.ok) {
            document.getElementById('commentContent').value = '';
            loadComments();
            // 댓글 수 증가
            const commentCount = document.getElementById('commentCount');
            commentCount.textContent = parseInt(commentCount.textContent) + 1;
        }
    } catch (error) {
        console.error('댓글 작성 실패:', error);
        alert('댓글 작성에 실패했습니다.');
    }
}

/**
 * 좋아요 토글
 */
async function toggleLike() {
    if (!isLoggedIn()) {
        if (confirm('로그인이 필요합니다. 로그인 페이지로 이동하시겠습니까?')) {
            location.href = '/login';
        }
        return;
    }
    
    try {
        const response = await fetchWithAuth(`/api/sales/${saleId}/like`, {
            method: 'POST'
        });
        
        if (response.ok) {
            const data = await response.json();
            document.getElementById('likeCount').textContent = data.likeCount;
            document.getElementById('likeText').textContent = data.liked ? '좋아요 취소' : '좋아요';
            
            const likeBtn = document.getElementById('likeBtn');
            if (data.liked) {
                likeBtn.classList.remove('btn-outline-danger');
                likeBtn.classList.add('btn-danger');
            } else {
                likeBtn.classList.remove('btn-danger');
                likeBtn.classList.add('btn-outline-danger');
            }
        }
    } catch (error) {
        console.error('좋아요 실패:', error);
    }
}

/**
 * 좋아요 상태 확인
 */
async function checkLikeStatus() {
    if (!isLoggedIn()) return;
    
    try {
        const response = await fetchWithAuth(`/api/sales/${saleId}/like/status`);
        const data = await response.json();
        
        if (data.liked) {
            document.getElementById('likeText').textContent = '좋아요 취소';
            const likeBtn = document.getElementById('likeBtn');
            likeBtn.classList.remove('btn-outline-danger');
            likeBtn.classList.add('btn-danger');
        }
    } catch (error) {
        console.error('좋아요 상태 확인 실패:', error);
    }
}

/**
 * 최신 세일 로드
 */
async function loadRecentSales() {
    try {
        const response = await fetch('/api/sales?size=5&sortBy=latest');
        const data = await response.json();
        renderRecentSales(data.content);
    } catch (error) {
        console.error('최신 세일 로드 실패:', error);
    }
}

/**
 * 최신 세일 렌더링
 */
function renderRecentSales(sales) {
    const recentSales = document.getElementById('recentSales');
    
    recentSales.innerHTML = sales.map(sale => `
        <a href="/sales/${sale.id}" class="list-group-item list-group-item-action">
            <div class="d-flex align-items-center">
                <img src="${sale.imageUrl || '/images/no-image.png'}" 
                     class="rounded me-2" width="50" height="50" alt="${sale.title}">
                <div class="flex-grow-1">
                    <div class="text-truncate">${escapeHtml(sale.title)}</div>
                    <small class="text-danger">${formatPrice(sale.price)}</small>
                </div>
            </div>
        </a>
    `).join('');
}
</script>

</body>
</html>